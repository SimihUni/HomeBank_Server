# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only
  # for the "main" branch
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  editorconfig-check:
    name: .editorconfig lint
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: ".editorconfig lint"
        uses: greut/eclint-action@v0
  linter:
    needs: [ editorconfig-check ]
    name: Super linter
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      #- name: "Lint and Git Leaks"
      #  uses: super-linter/super-linter@v5.7.2
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # unit testing
  
  unit-tests:
    needs: [ linter ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install modules
        run: yarn
      - name: Build from ts to js
        run: yarn build
      - name: Make dist/src/keys/
        run: mkdir dist/src/keys
      - name: Write secret keys 
        run: |
          ls -la
          echo '${{secrets.PB_KEY}}' > dist/src/keys/public.key.json
          echo '${{secrets.PR_KEY}}' > dist/src/keys/private.key.json
          ls -la dist/src/keys/
          ls -la
          
      - name: Run tests
        run: yarn test

  # sonar scan
  sonar-scan:
    needs: [ linter ]
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@v2.0.2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  
  # test database versioning scripts
  # build docker container
  build-test-docker:
      needs: [ sonar-scan, unit-tests ]
      runs-on: ubuntu-latest
      #enviroment: build-docker
      steps:
        - name: "Checkout repo"
          uses: actions/checkout@v4

        - name: "Build Image"
          run: docker buildx build -t simih/hbp:latest -t simih/hbp:${{ github.sha }} .

        - name: "Run Trivy vulnerability scanner"
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'simih/hbp:latest'
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            severity: 'CRITICAL'

        - name: "Save artifact"
          uses: actions/upload-artifact@v4
          with:
            name: build-artifact
            path: ./

  # push docker container

